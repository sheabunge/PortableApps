; comment -> G:\nxt\BricxCC\Documentation\Samples\LASM\12_datalog.asm
; comment Success: Task   0 assembled
; comment <-
dseg segment

  motor_pwr_0 sbyte
  motor_pwr_1 sbyte
  motor_pwr_2 sbyte

  motor_dir_0 sbyte 1
  motor_dir_1 sbyte 1
  motor_dir_2 sbyte 1

  motor_on_0  byte
  motor_on_1  byte
  motor_on_2  byte

dseg ends

dseg segment

  timer_offset_0 sdword
  timer_offset_1 sdword
  timer_offset_2 sdword
  timer_offset_3 sdword

  timer_tick_0   sdword
  timer_tick_1   sdword
  timer_tick_2   sdword
  timer_tick_3   sdword

  timer_mutex_0  mutex
  timer_mutex_1  mutex
  timer_mutex_2  mutex
  timer_mutex_3  mutex

dseg ends
dseg segment
  vars   sword[]
  m_vars mutex
dseg ends

dseg segment
  volumeCtrl byte 3
  volumeCtrlMute byte 0
dseg ends

dseg segment
  task0_temp1 sword
  task0_temp2 sword
  task0_run   byte
  running_tasks byte
dseg ends

; --------------------------------------
thread main
  precedes task0
  gettick timer_offset_0
  mov     timer_offset_1, timer_offset_0
  mov     timer_offset_2, timer_offset_0
  mov     timer_offset_3, timer_offset_0
  arrinit vars, 0, 128
  set task0_run, 1
  set running_tasks, 1
  exit
endt

; ----------------------------
thread task0
lbl_task0_start:
  brtst EQ, lbl_task0_stop, running_tasks
  brtst EQ, lbl_task0_start, task0_run

; pwr
  brtst EQ, lbl_task0_start, task0_run
  set motor_pwr_0, 7
  mul motor_pwr_0, motor_pwr_0, 14 ; scale 0-7 to 0-100
  mul motor_pwr_0, motor_pwr_0, motor_dir_0 ; adjust direction
  brtst EQ, lblNotOn0, motor_on_0
  setout 0, Power,       motor_pwr_0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn0:
  set motor_pwr_1, 7
  mul motor_pwr_1, motor_pwr_1, 14 ; scale 0-7 to 0-100
  mul motor_pwr_1, motor_pwr_1, motor_dir_1 ; adjust direction
  brtst EQ, lblNotOn1, motor_on_1
  setout 1, Power,       motor_pwr_1, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn1:
  set motor_pwr_2, 7
  mul motor_pwr_2, motor_pwr_2, 14 ; scale 0-7 to 0-100
  mul motor_pwr_2, motor_pwr_2, motor_dir_2 ; adjust direction
  brtst EQ, lblNotOn2, motor_on_2
  setout 2, Power,       motor_pwr_2, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn2:

; dir
  brtst EQ, lbl_task0_start, task0_run
  set motor_dir_0, 1
  mul motor_pwr_0, motor_pwr_0, motor_dir_0 ; adjust direction
  brtst EQ, lblNotOn3, motor_on_0
  setout 0, Power,       motor_pwr_0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn3:
  set motor_dir_1, 1
  mul motor_pwr_1, motor_pwr_1, motor_dir_1 ; adjust direction
  brtst EQ, lblNotOn4, motor_on_1
  setout 1, Power,       motor_pwr_1, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn4:
  set motor_dir_2, 1
  mul motor_pwr_2, motor_pwr_2, motor_dir_2 ; adjust direction
  brtst EQ, lblNotOn5, motor_on_2
  setout 2, Power,       motor_pwr_2, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn5:

; logz
  brtst EQ, lbl_task0_start, task0_run
; UNKNOWN OPCODE ("logz" ~ 52)
; dir
  brtst EQ, lbl_task0_start, task0_run
  set motor_dir_0, 1
  mul motor_pwr_0, motor_pwr_0, motor_dir_0 ; adjust direction
  brtst EQ, lblNotOn6, motor_on_0
  setout 0, Power,       motor_pwr_0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn6:
  set motor_dir_1, 1
  mul motor_pwr_1, motor_pwr_1, motor_dir_1 ; adjust direction
  brtst EQ, lblNotOn7, motor_on_1
  setout 1, Power,       motor_pwr_1, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn7:

; out
  brtst EQ, lbl_task0_start, task0_run
  set motor_on_0, 1
  setout 0, Power, motor_pwr_0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
  set motor_on_1, 1
  setout 1, Power, motor_pwr_1, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED

; setv
  brtst EQ, lbl_task0_start, task0_run
  set task0_temp1, 0
  replace vars, vars, 47, task0_temp1

; setv
  brtst EQ, lbl_task0_start, task0_run
  set task0_temp1, 50
  replace vars, vars, 46, task0_temp1

; setv
  brtst EQ, lbl_task0_start, task0_run
  set task0_temp1, 50
  replace vars, vars, 45, task0_temp1

; t0000028
t0000028:

; decvjn
  brtst EQ, lbl_task0_start, task0_run
  index task0_temp1, vars, 45
  sub task0_temp1, task0_temp1, 1
  replace vars, vars, 45, task0_temp1
  brtst LT, t0000063, task0_temp1

; setv
  brtst EQ, lbl_task0_start, task0_run
  index task0_temp1, vars, 47
  replace vars, vars, 0, task0_temp1

; log
  brtst EQ, lbl_task0_start, task0_run
; UNKNOWN OPCODE ("log" ~ 62)
; setv
  brtst EQ, lbl_task0_start, task0_run
  index task0_temp1, vars, 46
  replace vars, vars, 0, task0_temp1

; log
  brtst EQ, lbl_task0_start, task0_run
; UNKNOWN OPCODE ("log" ~ 62)
; wait
  brtst EQ, lbl_task0_start, task0_run
  set task0_temp1, 20
dseg segment
  now8 dword
  then8 dword
dseg ends
  gettick now8
  mul task0_temp1, task0_temp1, 10
  add then8, now8, task0_temp1
lblWaiting8:
  gettick now8
  brcmp LT, lblWaiting8, now8, then8

; sumv
  brtst EQ, lbl_task0_start, task0_run
  index task0_temp1, vars, 47
  set task0_temp2, 1
  add task0_temp1, task0_temp1, task0_temp2
  replace vars, vars, 47, task0_temp1

; subv
  brtst EQ, lbl_task0_start, task0_run
  index task0_temp1, vars, 46
  set task0_temp2, 1
  sub task0_temp1, task0_temp1, task0_temp2
  replace vars, vars, 46, task0_temp1

; jmp
  brtst EQ, lbl_task0_start, task0_run
  jmp t0000028

; t0000063
t0000063:

; out
  brtst EQ, lbl_task0_start, task0_run
  set motor_on_0, 0
  setout	0, Power, 0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
  set motor_on_1, 0
  setout	1, Power, 0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED

  set task0_run, 0 ; stop yourself
  sub running_tasks, running_tasks, 1
  jmp lbl_task0_start
lbl_task0_stop:
  exit
endt ; Task (0)

