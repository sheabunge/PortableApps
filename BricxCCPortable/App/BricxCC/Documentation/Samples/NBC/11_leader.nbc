; comment -> G:\nxt\BricxCC\Documentation\Samples\LASM\11_leader.asm
; comment Error - line 7   : 'msgz'
; comment Success: Task   0 assembled
; comment Success: Task   1 assembled
; comment Error - line 34  : 'msgz'
; comment Success: Task   2 assembled
; comment <-
dseg segment

  motor_pwr_0 sbyte
  motor_pwr_1 sbyte
  motor_pwr_2 sbyte

  motor_dir_0 sbyte 1
  motor_dir_1 sbyte 1
  motor_dir_2 sbyte 1

  motor_on_0  byte
  motor_on_1  byte
  motor_on_2  byte

dseg ends

dseg segment

  timer_offset_0 sdword
  timer_offset_1 sdword
  timer_offset_2 sdword
  timer_offset_3 sdword

  timer_tick_0   sdword
  timer_tick_1   sdword
  timer_tick_2   sdword
  timer_tick_3   sdword

  timer_mutex_0  mutex
  timer_mutex_1  mutex
  timer_mutex_2  mutex
  timer_mutex_3  mutex

dseg ends
dseg segment
  vars   sword[]
  m_vars mutex
dseg ends

dseg segment
  volumeCtrl byte 3
  volumeCtrlMute byte 0
dseg ends

dseg segment
  task0_temp1 sword
  task0_temp2 sword
  task0_run   byte
  task1_temp1 sword
  task1_temp2 sword
  task1_run   byte
  task2_temp1 sword
  task2_temp2 sword
  task2_run   byte
  running_tasks byte
dseg ends

; --------------------------------------
thread main
  precedes task0, task1, task2
  gettick timer_offset_0
  mov     timer_offset_1, timer_offset_0
  mov     timer_offset_2, timer_offset_0
  mov     timer_offset_3, timer_offset_0
  arrinit vars, 0, 128
  set task0_run, 1
  set running_tasks, 1
  exit
endt

; ----------------------------
thread task0
lbl_task0_start:
  brtst EQ, lbl_task0_stop, running_tasks
  brtst EQ, lbl_task0_start, task0_run

; pwr
  brtst EQ, lbl_task0_start, task0_run
  set motor_pwr_0, 7
  mul motor_pwr_0, motor_pwr_0, 14 ; scale 0-7 to 0-100
  mul motor_pwr_0, motor_pwr_0, motor_dir_0 ; adjust direction
  brtst EQ, lblNotOn0, motor_on_0
  setout 0, Power,       motor_pwr_0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn0:
  set motor_pwr_1, 7
  mul motor_pwr_1, motor_pwr_1, 14 ; scale 0-7 to 0-100
  mul motor_pwr_1, motor_pwr_1, motor_dir_1 ; adjust direction
  brtst EQ, lblNotOn1, motor_on_1
  setout 1, Power,       motor_pwr_1, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn1:
  set motor_pwr_2, 7
  mul motor_pwr_2, motor_pwr_2, 14 ; scale 0-7 to 0-100
  mul motor_pwr_2, motor_pwr_2, motor_dir_2 ; adjust direction
  brtst EQ, lblNotOn2, motor_on_2
  setout 2, Power,       motor_pwr_2, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn2:

; dir
  brtst EQ, lbl_task0_start, task0_run
  set motor_dir_0, 1
  mul motor_pwr_0, motor_pwr_0, motor_dir_0 ; adjust direction
  brtst EQ, lblNotOn3, motor_on_0
  setout 0, Power,       motor_pwr_0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn3:
  set motor_dir_1, 1
  mul motor_pwr_1, motor_pwr_1, motor_dir_1 ; adjust direction
  brtst EQ, lblNotOn4, motor_on_1
  setout 1, Power,       motor_pwr_1, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn4:
  set motor_dir_2, 1
  mul motor_pwr_2, motor_pwr_2, motor_dir_2 ; adjust direction
  brtst EQ, lblNotOn5, motor_on_2
  setout 2, Power,       motor_pwr_2, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn5:

; msgz
msgz:

; wait
  brtst EQ, lbl_task0_start, task0_run
  set task0_temp1, 200
dseg segment
  now6 dword
  then6 dword
dseg ends
  gettick now6
  mul task0_temp1, task0_temp1, 10
  add then6, now6, task0_temp1
lblWaiting6:
  gettick now6
  brcmp LT, lblWaiting6, now6, then6

; wait
  brtst EQ, lbl_task0_start, task0_run
; Unknown SRC/VALUE (4/400) for task0_temp1
dseg segment
  now7 dword
  then7 dword
dseg ends
  gettick now7
  mul task0_temp1, task0_temp1, 10
  add then7, now7, task0_temp1
lblWaiting7:
  gettick now7
  brcmp LT, lblWaiting7, now7, then7

; chk
  brtst EQ, lbl_task0_start, task0_run
  set task0_temp1, 0
; Unknown SRC/VALUE (15/0) for task0_temp2
  brcmp 1, t0000026, task0_temp1, task0_temp2

; start
  brtst EQ, lbl_task0_start, task0_run
  add running_tasks, running_tasks, 1
  set task2_run, 1

; jmp
  brtst EQ, lbl_task0_start, task0_run
  jmp t0000035

; t0000026
t0000026:

; msg
  brtst EQ, lbl_task0_start, task0_run
; UNKNOWN OPCODE ("msg" ~ B2)
; wait
  brtst EQ, lbl_task0_start, task0_run
  set task0_temp1, 400
dseg segment
  now8 dword
  then8 dword
dseg ends
  gettick now8
  mul task0_temp1, task0_temp1, 10
  add then8, now8, task0_temp1
lblWaiting8:
  gettick now8
  brcmp LT, lblWaiting8, now8, then8

; start
  brtst EQ, lbl_task0_start, task0_run
  add running_tasks, running_tasks, 1
  set task1_run, 1

; t0000035
t0000035:

  set task0_run, 0 ; stop yourself
  sub running_tasks, running_tasks, 1
  jmp lbl_task0_start
lbl_task0_stop:
  exit
endt ; Task (0)

; ----------------------------
thread task1
lbl_task1_start:
  brtst EQ, lbl_task1_stop, running_tasks
  brtst EQ, lbl_task1_start, task1_run

; msg
  brtst EQ, lbl_task1_start, task1_run
; UNKNOWN OPCODE ("msg" ~ B2)
; wait
  brtst EQ, lbl_task1_start, task1_run
  set task1_temp1, 200
dseg segment
  now9 dword
  then9 dword
dseg ends
  gettick now9
  mul task1_temp1, task1_temp1, 10
  add then9, now9, task1_temp1
lblWaiting9:
  gettick now9
  brcmp LT, lblWaiting9, now9, then9

; msg
  brtst EQ, lbl_task1_start, task1_run
; UNKNOWN OPCODE ("msg" ~ B2)
; wait
  brtst EQ, lbl_task1_start, task1_run
  set task1_temp1, 200
dseg segment
  now10 dword
  then10 dword
dseg ends
  gettick now10
  mul task1_temp1, task1_temp1, 10
  add then10, now10, task1_temp1
lblWaiting10:
  gettick now10
  brcmp LT, lblWaiting10, now10, then10

; msg
  brtst EQ, lbl_task1_start, task1_run
; UNKNOWN OPCODE ("msg" ~ B2)
  set task1_run, 0 ; stop yourself
  sub running_tasks, running_tasks, 1
  jmp lbl_task1_start
lbl_task1_stop:
  exit
endt ; Task (1)

; ----------------------------
thread task2
lbl_task2_start:
  brtst EQ, lbl_task2_stop, running_tasks
  brtst EQ, lbl_task2_start, task2_run

; t0020000
t0020000:

; msgz
msgz:

; t0020001
t0020001:

; chkl
  brtst EQ, lbl_task2_start, task2_run
  set task2_temp1, 0
; Unknown SRC/VALUE (15/0) for task2_temp2
  brcmp 4, t0020001, task2_temp1, task2_temp2

; chk
  brtst EQ, lbl_task2_start, task2_run
  set task2_temp1, 1
; Unknown SRC/VALUE (15/0) for task2_temp2
  brcmp 5, t0020020, task2_temp1, task2_temp2

; dir
  brtst EQ, lbl_task2_start, task2_run
  set motor_dir_0, 1
  mul motor_pwr_0, motor_pwr_0, motor_dir_0 ; adjust direction
  brtst EQ, lblNotOn11, motor_on_0
  setout 0, Power,       motor_pwr_0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn11:
  set motor_dir_2, 1
  mul motor_pwr_2, motor_pwr_2, motor_dir_2 ; adjust direction
  brtst EQ, lblNotOn12, motor_on_2
  setout 2, Power,       motor_pwr_2, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn12:

; out
  brtst EQ, lbl_task2_start, task2_run
  set motor_on_0, 1
  setout 0, Power, motor_pwr_0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
  set motor_on_2, 1
  setout 2, Power, motor_pwr_2, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED

; t0020020
t0020020:

; chk
  brtst EQ, lbl_task2_start, task2_run
  set task2_temp1, 2
; Unknown SRC/VALUE (15/0) for task2_temp2
  brcmp 5, t0020031, task2_temp1, task2_temp2

; dir
  brtst EQ, lbl_task2_start, task2_run
  set motor_dir_0, -1
  mul motor_pwr_0, motor_pwr_0, motor_dir_0 ; adjust direction
  brtst EQ, lblNotOn13, motor_on_0
  setout 0, Power,       motor_pwr_0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn13:
  set motor_dir_2, -1
  mul motor_pwr_2, motor_pwr_2, motor_dir_2 ; adjust direction
  brtst EQ, lblNotOn14, motor_on_2
  setout 2, Power,       motor_pwr_2, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
lblNotOn14:

; out
  brtst EQ, lbl_task2_start, task2_run
  set motor_on_0, 1
  setout 0, Power, motor_pwr_0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
  set motor_on_2, 1
  setout 2, Power, motor_pwr_2, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED

; t0020031
t0020031:

; chk
  brtst EQ, lbl_task2_start, task2_run
  set task2_temp1, 3
; Unknown SRC/VALUE (15/0) for task2_temp2
  brcmp 5, t0020040, task2_temp1, task2_temp2

; out
  brtst EQ, lbl_task2_start, task2_run
  set motor_on_0, 0
  setout	0, Power, 0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED
  set motor_on_2, 0
  setout	2, Power, 0, OutputMode,  OUT_MODE_MOTORON+OUT_MODE_BRAKE, RegMode,     OUT_REGMODE_IDLE, RunState,    OUT_RUNSTATE_RUNNING, UpdateFlags, UF_UPDATE_MODE+UF_UPDATE_SPEED

; t0020040
t0020040:

; jmp
  brtst EQ, lbl_task2_start, task2_run
  jmp t0020000

  set task2_run, 0 ; stop yourself
  sub running_tasks, running_tasks, 1
  jmp lbl_task2_start
lbl_task2_stop:
  exit
endt ; Task (2)

